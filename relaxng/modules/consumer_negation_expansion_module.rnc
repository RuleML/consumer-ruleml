namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dc:title [ "COnsumer RuleML Generic Negation" ]
dc:version [ "1.02" ]
dc:creator [ "Tara Athan (taraathan AT gmail.com" ]
dc:creator [ "Adrian Paschke" ]
dc:subject [ "RuleML, Consumer, Negation" ]
dc:description [
  "The expansion module for generic negation."
]
dc:language [ "en" ]
dcterms:rights [ "TBD" ]
start |= Negation

# This module declares the following Reaction RuleML elements:
# * Negation		generic polymorphig negation

# *** Negation ***

## the Negation attribute list
Negation.attlist &= generic-Node.attlist?
Negation.content |= Node.header, formula-negation.choice
formula-negation.choice |= formula-negation
Negation.type.def = Negation.content, Negation.attlist
Negation =
  
  ## <Negation>: a generic polymorphic negation, which is interpreted by the intended semantics (i.e. semantic profile). See
  ## http://www.reaction.ruleml.org/1.02/glossary/#gloss-Negation
  element Negation { Negation.type.def }
Node.choice |= Negation
Negation-node.choice |= Negation
#
formula-negation.attlist &= commonInit.attlist?
formula-negation.content |= NegFormula.choice
formula-negation.type.def = formula-negation.content, formula-negation.attlist
formula-negation = element formula { formula-negation.type.def }
edge.choice |= formula-negation

