namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dc:title [ "Consumer RuleML Generic Negation" ]
dc:version [ "1.02" ]
dc:creator [ "Tara Athan (taraathan AT gmail.com" ]
dc:creator [ "Adrian Paschke" ]
dc:subject [ "RuleML, Consumer, Negation" ]
dc:description [ "The expansion module for generic negation." ]
dc:language [ "en" ]
dcterms:rights [ "TBD" ]
dc:relation [ "http://consumer.ruleml.org" ]
start |= Negation.Node.def
Node.choice |= Negation.Node.def
edge.choice |= formula-negation.edge.def
# This module declares the following Consumer RuleML elements:
#             * Negation generic polymorphic negation
#             * formula

## the Negation attribute list
Negation-node.choice |= Negation.Node.def
Negation.Node.def =
  
  ## <Negation>: a generic polymorphic negation, which is interpreted by the intended semantics (i.e. semantic profile). See
  ## http://consumer.ruleml.org/1.02/glossary/#gloss-Negation
  element Negation { Negation.type.def }
Negation.type.def = Negation.attlist & Negation.content
Negation.attlist &= generic-Formula.attlist?
Negation.content |= Node.header, formula-negation-edge.choice

##
formula-negation-edge.choice |= formula-negation.edge.def
formula-negation.edge.def = element formula { formula-negation.type.def }
formula-negation.type.def = formula-negation.attlist & formula-negation.content
formula-negation.attlist &= commonInit.attlist?
formula-negation.content |= NegFormula.choice
