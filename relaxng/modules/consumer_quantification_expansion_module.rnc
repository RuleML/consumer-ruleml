namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dc:title [ "Consumer RuleML Extended Quantifications" ]
dc:version [ "1.02" ]
dc:creator [ "Tara Athan (taraathan AT gmail.com" ]
dc:creator [ "Adrian Paschke" ]
dc:subject [ "RuleML, Consumer, Quantification" ]
dc:description [
  "The expansion module for extended quantifications."
]
dc:language [ "en" ]
dcterms:rights [ "TBD" ]

include "http://deliberation.ruleml.org/1.02/relaxng/modules/quantification_expansion_module.rnc" {

ForallFormula.choice |=
    SimpleFormula-node.choice
    | And-fo-node.choice
    | Or-fo-node.choice
    | Negation-node.choice
#    | NegationAsFailure-node.notallowed
    | NegationAsFailure-ae-node.choice
    | Implication-node.choice
    | Forall-node.choice
    | Exists-fo-node.choice

  reForall.attlist &= operator-interface.attlist?


  ExistsFormula.choice |=
    SimpleFormula-node.choice
    | And-node.choice
    | Or-node.choice
    | Negation-node.choice
#    | NegationAsFailure-node.notallowed
    | NegationAsFailure-ae-node.choice
    | Implication-fo-node.choice
    | Forall-fo-node.choice
    | Exists-node.choice

  reExists.attlist &= operator-interface.attlist?

}