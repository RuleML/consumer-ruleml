<?xml version="1.0" encoding="UTF-8"?>
<!-- dcterms:rights [ "TBD" ]-->
<?xml-model href="../../../relaxng/drivers/consumer-relaxed.rnc"?> 
<!--<?xml-model href="../../../relaxng/drivers/consumer-relaxed.rnc"?> -->
<RuleML xmlns="http://ruleml.org/spec"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://ruleml.org/spec http://deliberation.ruleml.org/1.02/xsd/naffologeq.xsd">


  <!-- a syntactic example rulebase for testing the Naffolog RuleML sublanguage without fuzzy logic -->

    <Equal>
      <Ind>some constant</Ind>
      <Var>d</Var>
    </Equal>

    <Forall>
      <Var>d</Var>
      <Equal>
        <Ind>some constant</Ind>
        <Var>d</Var>
      </Equal>
    </Forall>

    <Exists>
      <Var>d</Var>
      <Equal>
        <Ind>some constant</Ind>
        <Var>d</Var>
      </Equal>
    </Exists>

    <Equivalent>
      <torso>
        <Equal>
          <Ind>some constant</Ind>
          <Var>d</Var>
        </Equal>
      </torso>
      <torso>
        <Equal>
          <Ind>some constant</Ind>
          <Var>d</Var>
        </Equal>
      </torso>
    </Equivalent>

    <Neg>
      <Equal>
        <Ind>some constant</Ind>
        <Var>d</Var>
      </Equal>
    </Neg>

    <Implies>
      <Naf>
        <Equal>
          <Ind>some constant</Ind>
          <Var>d</Var>
        </Equal>
      </Naf>
      <Atom>
        <Rel>own</Rel>
        <Var>person</Var>
        <Var>object</Var>
      </Atom>
    </Implies>

    <Forall>
      <Var>person</Var>
      <Var>object</Var>
      <Implies>
        <if>
          <Naf mapDirection="bidirectional">
            <weak>
              <Implies node="this:#disclaiming-of-other-persons">
                <if>
                  <Equal>
                    <Ind>some constant</Ind>
                    <Var>d</Var>
                  </Equal>
                </if>
                <then>
                  <Equal>
                    <Ind>some constant</Ind>
                    <Var>d</Var>
                  </Equal>
                </then>
              </Implies>
            </weak>
          </Naf>
        </if>
        <then>
          <Atom>
            <Rel>own</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
        </then>
      </Implies>
    </Forall>

    <Equivalent>
      <torso>
        <Atom>
          <Rel>own</Rel>
          <Skolem>test</Skolem>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </torso>
      <torso>
        <Atom>
          <Rel>belongs</Rel>
          <Var>object</Var>
          <Var>person</Var>
          <repo>
            <Var>x</Var>
          </repo>
          <resl>
            <Var>y</Var>
          </resl>
        </Atom>
      </torso>
    </Equivalent>

    <Implies node="this:#claiming-through-disclaimers">
      <if>
        <And>
          <Equal>
            <Ind>some constant</Ind>
            <Var>d</Var>
          </Equal>
          <Naf>
            <Exists closure="existential">
              <Var>merchant</Var>
              <And>
                <Atom>
                  <Rel>buy</Rel>
                  <Var>person</Var>
                  <Var>merchant</Var>
                  <Var>object</Var>
                </Atom>
                <Atom>
                  <Rel>keep</Rel>
                  <Var>person</Var>
                  <Var>object</Var>
                </Atom>
              </And>
            </Exists>
          </Naf>
          <Forall>
            <Var>x</Var>
            <Implies node="this:#disclaiming-of-other-persons">
              <if>
                <Atom>
                  <Rel>unequal</Rel>
                  <Var>x</Var>
                  <Var>person</Var>
                </Atom>
              </if>
              <then>
                <Atom>
                  <Rel>disclaim</Rel>
                  <Var>x</Var>
                  <Skolem>test</Skolem>
                  <Var>object</Var>
                </Atom>
              </then>
            </Implies>
          </Forall>
          <Atom>
            <Rel>keep</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
        </And>
      </if>
      <then>
        <Atom>
          <Rel>claim</Rel>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </then>
    </Implies>

    <Implies node="this:#claiming-or-relinquishing-through-disclaimers">
      <if>
        <Forall>
          <Var>x</Var>
          <Implies node="this:#disclaiming-of-other-persons">
            <if>
              <Atom>
                <Rel>unequal</Rel>
                <Var>x</Var>
                <Var>person</Var>
              </Atom>
            </if>
            <then>
              <Atom>
                <Rel>disclaim</Rel>
                <Var>x</Var>
                <Var>object</Var>
                <repo>
                  <Var>x</Var>
                </repo>
              </Atom>
            </then>
          </Implies>
        </Forall>
      </if>
      <then>
        <Or>
          <Atom>
            <Rel>claim</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
          <Atom>
            <Rel>relinquish</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
        </Or>
      </then>
    </Implies>
    <Implies>
      <if>
        <And>
          <Atom>
            <op>
              <Rel>friend</Rel>
            </op>
            <Ind>Jane</Ind>
            <Ind>Joan</Ind>
            <Skolem/>
            <Ind>Jack</Ind>
            <Var>y</Var>
            <Ind>Frank</Ind>
            <Plex>
              <Ind/>
            </Plex>
            <repo>
              <Plex>
                <Ind/>
                <Var/>
              </Plex>
            </repo>
            <slot>
              <Ind>yar</Ind>
              <Expr>
                <op>
                  <Fun>constructor</Fun>
                </op>
                <Plex>
                  <Var>z</Var>
                  <slot>
                    <Ind>yar2</Ind>
                    <Var>c</Var>
                  </slot>
                </Plex>
              </Expr>
            </slot>
            <resl>
              <Plex>
                <slot>
                  <Ind/>
                  <Var/>
                </slot>
              </Plex>
            </resl>
          </Atom>
        </And>
      </if>
      <then>
        <Or>
          <Atom>
            <op>
              <Rel>friend</Rel>
            </op>
            <slot>
              <Ind>t</Ind>
              <Var>b</Var>
            </slot>
            <Var>x</Var>
            <Var>y</Var>
            <Ind>Steph</Ind>
          </Atom>
          <Atom>
            <op>
              <Rel>friend</Rel>
            </op>
            <slot>
              <Ind>t</Ind>
              <Var>b</Var>
            </slot>
            <Var>x</Var>
            <Var>y</Var>
            <Ind>Jill</Ind>
          </Atom>
        </Or>
      </then>
    </Implies>

    <Atom>
      <op>
        <Rel>some relation</Rel>
      </op>
      <slot>
        <Ind>role_name1</Ind>
        <Ind>role 1</Ind>
      </slot>
      <Ind>constant a</Ind>
      <Ind>constant b</Ind>
      <slot>
        <Ind>role_name2</Ind>
        <Ind>role 2</Ind>
      </slot>
    </Atom>

    <Equal>
      <Expr>
        <op>
          <Fun per="value">some function</Fun>
        </op>
        <Ind>arg1</Ind>
        <Ind>arg2</Ind>
        <Ind>arg3</Ind>
      </Expr>
      <Expr>
        <op>
          <Fun per="value">some other function</Fun>
        </op>
        <Ind>arg4</Ind>
        <Ind>arg5</Ind>
        <Ind>arg6</Ind>
      </Expr>
    </Equal>



</RuleML>
