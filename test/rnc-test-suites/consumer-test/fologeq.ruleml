<?xml version="1.0" encoding="UTF-8"?>
<!-- dc:rights [ 'Copyright 2015 RuleML Inc. - Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.' ]-->
<?xml-model href="../../../relaxng/drivers/consumer-relaxed.rnc"?> 
<And xmlns="http://ruleml.org/spec"
  xmlns:this="http://example.org/fologeq.ruleml"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!-- a syntactic example rulebase for testing the fologeq (first-order logic with equations) RuleML sublanguage -->


    <Equal closure="universal">
      <Ind>some constant</Ind>
      <Var>d</Var>
    </Equal>

    <Forall>
      <Var>d</Var>
      <Equal>
        <Ind>some constant</Ind>
        <Var>d</Var>
      </Equal>
    </Forall>

    <Exists>
      <Var>d</Var>
      <Equal>
        <Ind>some constant</Ind>
        <Var>d</Var>
      </Equal>
    </Exists>

    <Forall>
      <Var>person</Var>
      <Var>object</Var>
      <Implies>
        <if>
          <Equal>
            <Ind>some constant</Ind>
            <Var>d</Var>
          </Equal>
        </if>
        <then>
          <Atom>
            <Rel>own</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
        </then>
      </Implies>
    </Forall>

  <Neg closure="universal">
      <Equal>
        <Ind>some constant</Ind>
        <Var>d</Var>
      </Equal>
    </Neg>

  <Equivalent closure="universal">
      <torso>
        <Equal>
          <Ind>some constant</Ind>
          <Var>d</Var>
        </Equal>
      </torso>
      <torso>
        <Equal>
          <Ind>some constant</Ind>
          <Var>d</Var>
        </Equal>
      </torso>
    </Equivalent>

  <Equivalent closure="universal">
      <torso>
        <Atom>
          <Rel>own</Rel>
          <Skolem>test</Skolem>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </torso>
      <torso>
        <Atom>
          <Rel>belongs</Rel>
          <Var>object</Var>
          <Var>person</Var>
          <repo>
            <Var>x</Var>
          </repo>
          <resl>
            <Var>y</Var>
          </resl>
        </Atom>
      </torso>
    </Equivalent>

  <Implies closure="universal">
      <if>
        <And>
          <Forall>
            <Var>x</Var>
            <Implies>
              <if>
                <Atom>
                  <Rel>unequal</Rel>
                  <Var>x</Var>
                  <Var>person</Var>
                </Atom>
              </if>
              <then>
                <Atom>
                  <Rel>disclaim</Rel>
                  <Var>x</Var>
                  <Skolem>test</Skolem>
                  <Var>object</Var>
                </Atom>
              </then>
            </Implies>
          </Forall>
          <Atom>
            <Rel>keep</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
        </And>
      </if>
      <then>
        <Atom>
          <Rel>claim</Rel>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </then>
    </Implies>

  <Implies closure="universal">
      <if>
        <Forall>
          <Var>x</Var>
          <Implies>
            <if>
              <Atom>
                <Rel>unequal</Rel>
                <Var>x</Var>
                <Var>person</Var>
              </Atom>
            </if>
            <then>
              <Atom>
                <Rel>disclaim</Rel>
                <Var>x</Var>
                <Var>object</Var>
                <repo>
                  <Var>x</Var>
                </repo>
              </Atom>
            </then>
          </Implies>
        </Forall>
      </if>
      <then>
        <Equal>
          <Ind>some constant</Ind>
          <Var>d</Var>
        </Equal>
      </then>
    </Implies>
    <Implies>
      <if>
        <And>
          <Equal>
            <Ind>some constant</Ind>
            <Var>d</Var>
          </Equal>
          <Atom>
            <op>
              <Rel>friend</Rel>
            </op>
            <Ind>Jane</Ind>
            <Ind>Joan</Ind>
            <Skolem/>
            <Ind>Jack</Ind>
            <Var>y</Var>
            <Ind>Frank</Ind>
            <Plex>
              <Ind/>
            </Plex>
            <repo>
              <Plex>
                <Ind/>
                <Var/>
              </Plex>
            </repo>
            <slot>
              <Ind>yar</Ind>
              <Expr>
                <op>
                  <Fun>constructor</Fun>
                </op>
                <Plex>
                  <Var>z</Var>
                  <slot>
                    <Ind>yar2</Ind>
                    <Ind>c</Ind>
                  </slot>
                </Plex>
              </Expr>
            </slot>
            <resl>
              <Plex>
                <slot>
                  <Ind/>
                  <Ind/>
                </slot>
              </Plex>
            </resl>
          </Atom>
        </And>
      </if>
      <then>
        <Or>
          <Atom>
            <op>
              <Rel>friend</Rel>
            </op>
            <slot>
              <Ind>t</Ind>
              <Ind>b</Ind>
            </slot>
            <Var>x</Var>
            <Var>y</Var>
            <Ind>Steph</Ind>
          </Atom>
          <Atom>
            <op>
              <Rel>friend</Rel>
            </op>
            <slot>
              <Ind>t</Ind>
              <Ind>b</Ind>
            </slot>
            <Var>x</Var>
            <Var>y</Var>
            <Ind>Jill</Ind>
          </Atom>
        </Or>
      </then>
    </Implies>

    <Atom>
      <Rel>some relation</Rel>
      <slot>
        <Ind>role_name1</Ind>
        <Ind>role 1</Ind>
      </slot>
      <Ind>constant a</Ind>
      <Ind>constant b</Ind>
      <slot>
        <Ind>role_name2</Ind>
        <Ind>role 2</Ind>
      </slot>
    </Atom>

    <Equal>
      <Expr>
        <op>
          <Fun>some function</Fun>
        </op>
        <Ind>arg1</Ind>
        <Ind>arg2</Ind>
        <Ind>arg3</Ind>
      </Expr>
      <Expr>
        <op>
          <Fun>some other function</Fun>
        </op>
        <Ind>arg4</Ind>
        <Ind>arg5</Ind>
        <Ind>arg6</Ind>
      </Expr>
    </Equal>



    <Neg>
      <Exists>
        <Var>x</Var>
        <Forall>
          <Var>y</Var>
          <Equal>
            <Var>x</Var>
            <Var>y</Var>
          </Equal>
        </Forall>
      </Exists>
    </Neg>
  
  <Equal closure="universal">
      <Expr>
        <Fun>fac</Fun>
        <Data xsi:type="xs:integer">0</Data>
      </Expr>
      <Data xsi:type="xs:integer">1</Data>
    </Equal>
</And>
